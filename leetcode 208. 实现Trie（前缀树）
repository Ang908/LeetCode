class Trie {

    private class TreeNode{
        TreeNode[] next;
        int endNums;

        public TreeNode() {
            next = new TreeNode[26];
            endNums = 0;
        }
    }
    private TreeNode root = null;

    public Trie() {
        root = new TreeNode();
    }

    public void insert(String word) {
        TreeNode curr = root;
        for(int i = 0; i < word.length(); i++){
            char c = word.charAt(i);
            if(curr.next[c - 'a'] == null){
                curr.next[c - 'a'] = new TreeNode();
            }
            curr = curr.next[c - 'a'];
        }
        curr.endNums += 1;
    }

    public boolean search(String word) {
        TreeNode curr = root;
        for(int i = 0; i < word.length(); i++){
            char c = word.charAt(i);
            if(curr.next[c - 'a'] == null){
                return false;
            }
            curr = curr.next[c - 'a'];
        }
        return curr.endNums > 0;
    }

    public boolean startsWith(String prefix) {
        TreeNode curr = root;
        for(int i = 0; i < prefix.length(); i++){
            char c = prefix.charAt(i);
            if(curr.next[c - 'a'] == null){
                return false;
            }
            curr = curr.next[c - 'a'];
        }
        return true;
    }

}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */
